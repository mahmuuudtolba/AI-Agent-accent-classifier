name: CI/CD for dockerized AI-Agent-accent

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Add timeout to prevent hanging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4  # Updated to v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          echo "Dependencies installed."

      - name: Run flake8 linter
        run: |
          echo "Running flake8..."
          # Add specific directories or files to lint if needed
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
          echo "flake8 completed."

      # Optional: Add tests if you have any
      - name: Run tests
        run: |
          echo "Running tests..."
          # Only run pytest if test files exist
          if [ -d "tests" ] || find . -name "test_*.py" -o -name "*_test.py" | grep -q .; then
            pytest -v
          else
            echo "No test files found, skipping tests."
          fi
          echo "Tests completed."

  build-and-publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3  # Updated to v3

      - name: Login to DockerHub
        uses: docker/login-action@v3  # Updated to v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v5  # Updated to v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ai-agent-accent:latest
          platforms: linux/amd64  # Specify platform to avoid issues

  build-and-push-to-ecr:
    needs: build-and-test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push to ECR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
          platforms: linux/amd64

  deploy-to-ecs:
    needs: build-and-push-to-ecr
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Render updated ECS task definition
        id: render-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: AI-agent-container
          image: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          cluster: strong-crocodile-5j0qw1
          service: ai-agent-accent-service-uwifcn5h
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}